-- Created by Melon -- 

local S =setmetatable({},{__index=function(s,i)local serv = select(2,pcall(game.GetService,game,i))if(serv)then rawset(s,i,serv) return serv end end})
local RNG = (function()
	local R=Random.new()
	return function(min,max,intOrDivider)
		local min=min or 0
		local max=max or 1

		if(typeof(intOrDivider)=='number')then
			return R:NextInteger(min,max)/intOrDivider
		else
			if(intOrDivider)then
				return R:NextInteger(min,max)
			else
				return R:NextNumber(min,max)
			end
		end
	end
end)()
local Camera = workspace.Camera
local M = {R=math.rad;RNG=RNG;RRNG=function(...)return math.rad(RNG(...))end;P=math.pi;C=math.clamp;S=math.sin;C=math.cos;T=math.tan;AS=math.asin;AC=math.acos;AT=math.atan;D=math.deg;H=math.huge;}
local CF = {N=CFrame.new;A=CFrame.Angles;fEA=CFrame.fromEulerAnglesXYZ;}
local C3 = {N=Color3.new;RGB=Color3.fromRGB;HSV=function(...)local data={...}if(typeof(data[1])=='Color3')then return Color3:ToHSV(...)else return Color3.fromHSV(...)end;end;}
local V3 = {N=Vector3.new};
local IN = Instance.new;
local R3 = Region3.new

local Plr = game.Players.LocalPlayer
local PlrGui = Plr:FindFirstChildOfClass'PlayerGui'
local Char = Plr.Character;
char = Plr.Character



local Hum = Char:FindFirstChildOfClass'Humanoid'
assert(Hum and Hum.RigType==Enum.HumanoidRigType.R6,"You need to have a Humanoid and be R6.")
local RArm = Char:WaitForChild'Right Arm'
RArm.Transparency = 1
local LArm = Char:WaitForChild'Left Arm'
local Torso = Char:WaitForChild'Torso'
local RLeg = Char:WaitForChild'Right Leg'
RLeg.Transparency = 1
local LLeg = Char:WaitForChild'Left Leg'
LLeg.Transparency = 1
local Head = Char:WaitForChild'Head'
local Root = Char:WaitForChild'HumanoidRootPart'
local NeutralAnims = true;
local Attack = false;

local Joints = {}
local Sine = 0
local Change = 1
local CamCFrame=CFrame.new()
local Puddles = {}
local CamFollowing=Head;
local Dead={}


local baseSound = IN("Sound")
function Sound(parent,id,pitch,volume,looped,effect,autoPlay)
	local Sound = baseSound:Clone()
	Sound.SoundId = "rbxassetid://".. tostring(id or 0)
	Sound.Pitch = pitch or 1
	Sound.Volume = volume or 1
	Sound.Looped = looped or false
	if(not looped and effect)then
		Sound.Stopped:connect(function()
			Sound.Volume = 0
			Sound:destroy()
		end)
	elseif(effect)then
		warn("Sound can't be looped and a sound effect!")
	end
	Sound.Parent =parent or workspace
	if(autoPlay)then
		Sound:Play()
	end
	return Sound
end
function Part(parent,color,material,size,cframe,anchored,cancollide)
	local part = IN("Part")
	part[typeof(color) == 'BrickColor' and 'BrickColor' or 'Color'] = color or C3.N(0,0,0)
	part.Material = material or Enum.Material.SmoothPlastic
	part.TopSurface,part.BottomSurface=10,10
	part.Size = size or V3.N(1,1,1)
	part.CFrame = cframe or CF.N(0,0,0)
	part.CanCollide = cancollide or false
	part.Anchored = anchored or false
	part.Parent = parent
	return part
end

function Weld(part0,part1,c0,c1)
	local weld = IN("Weld")
	weld.Part0 = part0
	weld.Part1 = part1
	weld.C0 = c0 or CF.N()
	weld.C1 = c1 or CF.N()
	weld.Parent = part0
	return weld
end

function Mesh(parent,meshtype,meshid,textid,scale,offset)
	local part = IN("SpecialMesh")
	part.MeshId = meshid or ""
	part.TextureId = textid or ""
	part.Scale = scale or V3.N(1,1,1)
	part.Offset = offset or V3.N(0,0,0)
	part.MeshType = meshtype or Enum.MeshType.Sphere
	part.Parent = parent
	return part
end

function SoundPart(id,pitch,volume,looped,effect,autoPlay,cf)
	local soundPart = Part(workspace,C3.N(1,1,1),Enum.Material.SmoothPlastic,V3.N(.05,.05,.05),cf,true,false)
	soundPart.Transparency=1
	local Sound = IN("Sound")
	Sound.SoundId = "rbxassetid://".. tostring(id or 0)
	Sound.Pitch = pitch or 1
	Sound.Volume = volume or 1
	Sound.Looped = looped or false
	if(autoPlay)then
		coroutine.wrap(function()
			repeat wait() until Sound.IsLoaded
			Sound.Playing = autoPlay or false
		end)()
	end
	if(not looped and effect)then
		Sound.Stopped:connect(function()
			Sound.Volume = 0
			soundPart:destroy()
		end)
	elseif(effect)then
		warn("Sound can't be looped and a sound effect!")
	end
	Sound.Parent = soundPart
	return Sound
end

function Joint(name,part0,part1,c0,c1,type)
	local joint = IN(type or "Motor6D")
	joint.Part0 = part0
	joint.Part1 = part1
	joint.C0 = c0 or CF.N()
	joint.C1 = c1 or CF.N()
	joint.Parent=part0
	joint.Name=name or part0.." to "..part1.." "..joint.ClassName
	return joint
end

function NewInstance(instance,parent,properties)if(properties.Parent)then properties.Parent=parent end;local new = IN(instance)if(properties)then for prop,val in next, properties do pcall(function() new[prop]=val end)end;end;new.Parent=parent;return new;end



local WalkSpeed = 35


function GetJoint(joint)
	for i,v in next, Joints do
		if(i==joint or v.J==joint)then
			return v,i;
		end
	end	
	return nil;
end

function getLength(table)local len=0;for i,v in next,table do len=len+1 end;return len;end
function getFirstEntry(table)for i,v in next,table do return i,v end;return nil;end

function Animate(joint,props,alpha,style,dir)
	local joint = typeof(joint)=='string' and Joints[joint].J or typeof(joint)=='table' and joint.J or typeof(joint)=='Instance' and joint or error("lol animate needs a string, table or instance")
	local propName='C0'
	if(typeof(props)=='table' and getLength(props)==1 and select(2,getFirstEntry(props)).lerp)then
		propName,props=getFirstEntry(props)
	end

	if(style=='Lerp' and props.lerp)then
		joint[propName] = joint[propName]:lerp(props,alpha)
	else
		if(typeof(props)=='CFrame')then
			props={C0=props}
		end
		local info = TweenInfo.new(alpha or 1,(style~='Lerp' and style) or Enum.EasingStyle.Linear,dir or Enum.EasingDirection.Out,0,false,0)
		local tween = S.TweenService:Create(joint,info,props)
		tween:Play();
		return tween;
	end
end

Joints['RJ'] = Joint("RootJoint",Root,Torso,CF.N(),CF.N())
Joints['NK'] = Joint("Neck",Torso,Head,CF.N(0,1.5,0),CF.N())
Joints['LS'] = Joint("Left Shoulder",Torso,LArm,CF.N(-1.5,.5,0),CF.N(0,.5,0))
Joints['RS'] = Joint("Right Shoulder",Torso,RArm,CF.N(1.5,.5,0),CF.N(0,.5,0))

for i,v in next, Joints do Joints[i]={J=v,D={C0=v.C0,C1=v.C1}} end


-- Artificial Heartbeat --
local AHB = Instance.new("BindableEvent")
do
	local Timeframe = 0;
	local LastFrame= 0;

	local FPS = 60
	AHB:Fire()

	game:GetService("RunService").Heartbeat:connect(function(s, p)
		Timeframe = Timeframe + s
		if(Timeframe >= 1/FPS)then
			for i = 1, math.floor(Timeframe/(1/FPS)) do
				AHB:Fire()
			end
			LastFrame = tick()
			Timeframe = Timeframe - (1/FPS) * math.floor(Timeframe / (1/FPS))
		end
	end)
end

function fwait(Frames)
	for i = 1,((typeof(Frames)~='number' or Frames<=0) and 1 or Frames)do
		AHB.Event:wait()
	end
end

-- Stop Animations --
for _,v in next, Hum:GetPlayingAnimationTracks() do
	v:Stop();
end

pcall(game.Destroy,Char:FindFirstChild'Animate')
pcall(game.Destroy,Hum:FindFirstChild'Animator')

function Tween(object,properties,time,style,dir,repeats,reverse,delay)
	local info = TweenInfo.new(time or 1,style or Enum.EasingStyle.Linear,dir or Enum.EasingDirection.Out,repeats or 0,reverse or false,delay or 0)
	local tween = S.TweenService:Create(object,info,properties)
	tween:Play()
	return tween;
end

local function numLerp(Start,Finish,Alpha)
	return Start + (Finish- Start) * Alpha
end

function IsValidEnum(val,enum,def)
	local enum = Enum[tostring(enum)]
	local succ,err=pcall(function() return enum[val.Name] end)
	if(not err)then
		return val
	else
		return def
	end
end

function IsValid(val,type,def)
	if(typeof(type)=='string')then
		return (typeof(val)==type and val or def)
	elseif(typeof(type)=='table')then
		for i,v in next, type do
			if(typeof(val)==v)then
				return val
			end
		end
	end
	return def
end

function GetKeyframe(sequence,currentTime,lifeTime)
	local scale = currentTime/lifeTime
	for i = 1,#sequence.Keypoints do
		local keyframe = sequence.Keypoints[i]
		local nframe = sequence.Keypoints[i+1]
		if(not nframe or keyframe.Time>=scale and keyframe.Time<nframe.Time)then
			return keyframe
		end
	end
	return sequence.Keypoints[1];
end;

function CastRay(startPos,endPos,range,ignoreList)
	local ray = Ray.new(startPos,(endPos-startPos).unit*range)
	local part,pos,norm = workspace:FindPartOnRayWithIgnoreList(ray,ignoreList or {Char},false,true)
	return part,pos,norm,(pos and (startPos-pos).magnitude)
end

function GetTorso(char)
	return char:FindFirstChild'Torso' or char:FindFirstChild'UpperTorso' or char:FindFirstChild'LowerTorso' or char:FindFirstChild'HumanoidRootPart'
end

function getRegion(point,range,ignore)
	return workspace:FindPartsInRegion3WithIgnoreList(R3(point-V3.N(1,1,1)*range/2,point+V3.N(1,1,1)*range/2),ignore,100)
end

Mode = 1

local ModeSong = Instance.new("Sound")
ModeSong.Parent = workspace
ModeSong.Pitch = 1
ModeSong.SoundId = "rbxasset://Songs/Mode1.mp3"
ModeSong.Looped = true
ModeSong:Play()

plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(Key)
	if Key == "m" and Mode == 1 then
		Mode = 2
		ModeSong.SoundId = "rbxasset://Songs/Mode3.mp3"
	elseif Key == "m" and Mode == 2 then
		Mode = 3
		ModeSong.SoundId = "rbxasset://Songs/Mode4.mp3"
		ModeSong.Pitch = 1.045
	elseif Key == "m" and Mode == 3 then
		Mode = 4
		ModeSong.SoundId = "rbxasset://Songs/Mode5.mp3"
		ModeSong.Pitch = 0.950
	elseif Key == "m" and Mode == 4 then
		Mode = 5
		ModeSong.SoundId = "rbxasset://Songs/Mode6.mp3"
		ModeSong.Pitch = 1
	elseif Key == "m" and Mode == 5 then
		Mode = 1
		ModeSong.SoundId = "rbxasset://Songs/Mode1.mp3"
		ModeSong.Pitch = 1
	end
end)

while true do
	Loudness = math.floor(ModeSong.PlaybackLoudness)
	Camera.FieldOfView = 65+Loudness/35
	game.Lighting.Brightness = 1+Loudness/45
	-- game.Lighting.FogEnd = 50+Loudness/15
	game.Lighting.ExposureCompensation = 0+Loudness/2450
	Sine=Sine+Change

	local Walking = Hum.MoveDirection.magnitude>0
	local Hit,Pos = CastRay(Root.Position,Root.Position-V3.N(0,1,0),4)
	local State = (Hum.Sit and "Sit" or not Hit and Root.Velocity.Y<-1 and 'Fall' or not Hit and Root.Velocity.Y>1 and 'Jump' or Walking and "Walk" or "Idle")


	local Direction = Root.CFrame:ToObjectSpace(CamCFrame).lookVector.unit


	local FwdDir = (Walking and Hum.MoveDirection*Root.CFrame.lookVector or V3.N())
	local RigDir = (Walking and Hum.MoveDirection*Root.CFrame.rightVector or V3.N())
	local Vec = {
		X=(RigDir.X+RigDir.Z)*(Hum.WalkSpeed/16),
		Z=(FwdDir.X+FwdDir.Z)*(Hum.WalkSpeed/16)
	};
	local Divide = 1
	if(Vec.Z<0)then
		Divide=math.clamp(-(1.25*Vec.Z),1,2)
	end
	Vec.Z = Vec.Z/Divide
	Vec.X = Vec.X/Divide
	Hum.WalkSpeed = WalkSpeed/Divide

	local WsFactor = 6/(WalkSpeed/25)
 

	if(NeutralAnims)then	
		if(State == 'Idle') and Mode == 1 then
			local Alpha = .2


			Animate("LS",CF.N(-1.45,0.45,0)*CF.A(M.R(90+0.45*M.S(Sine/24)),M.R(0),M.R(-25+0.45*M.S(Sine/24))),Alpha,"Lerp")

			Animate("RJ",CF.N(0,-.05+.1*M.C(Sine/24),0)*CF.A(M.R(2+2*M.S(Sine/24)),M.R(0),M.R(0)),Alpha,"Lerp")
			Animate("NK",CF.N(0,1.5,0)*CF.A(M.R(-15+1.45*M.S(Sine/24)),M.R(0+0.55*M.S(Sine/24)),M.R(4+0.15*M.S(Sine/24))),Alpha,"Lerp")

			Animate("RS",CF.N(1.45,0.45,0)*CF.A(M.R(90+0.55*M.S(Sine/24)),M.R(5-0.45*M.S(Sine/24)),M.R(25+0.45*M.S(Sine/24))),Alpha,"Lerp")
			
		elseif(State == 'Idle') and Mode == 2 then
			local Alpha = .2

			Animate("LS",CF.N(-1.45,0.45,0)*CF.A(M.R(120+4.55*M.S(Sine/24)),M.R(0),M.R(-25+0.45*M.S(Sine/24))),Alpha,"Lerp")

			Animate("RJ",CF.N(0,-.05+.1*M.C(Sine/24),0)*CF.A(M.R(2+2*M.S(Sine/24)),M.R(0),M.R(0)),Alpha,"Lerp")
			Animate("NK",CF.N(0,1.5,0)*CF.A(M.R(-45+5*M.S(Sine/24)),M.R(0+0.55*M.S(Sine/24)),M.R(4+0.15*M.S(Sine/24))),Alpha,"Lerp")

			Animate("RS",CF.N(1.45,0.45,0)*CF.A(M.R(120+4.55*M.S(Sine/24)),M.R(5-0.45*M.S(Sine/24)),M.R(25+0.45*M.S(Sine/24))),Alpha,"Lerp")

		elseif(State == 'Idle') and Mode == 3 then
			local Alpha = .2

			Animate("LS",CF.N(-1.45,0.45,0)*CF.A(M.R(90+4.55*M.S(Sine/24)),M.R(0),M.R(65+0.45*M.S(Sine/24))),Alpha,"Lerp")

			Animate("RJ",CF.N(0,-.05+.1*M.C(Sine/24),0)*CF.A(M.R(2+2*M.S(Sine/24)),M.R(0),M.R(0)),Alpha,"Lerp")
			Animate("NK",CF.N(0,1.5,0)*CF.A(M.R(35+5*M.S(Sine/24)),M.R(0+0.55*M.S(Sine/24)),M.R(4+0.15*M.S(Sine/24))),Alpha,"Lerp")

			Animate("RS",CF.N(1.45,0.45,0)*CF.A(M.R(90+4.55*M.S(Sine/24)),M.R(5-0.45*M.S(Sine/24)),M.R(-65+0.45*M.S(Sine/24))),Alpha,"Lerp")
			
		elseif(State == 'Idle') and Mode == 4 then
			local Alpha = .2

			Animate("LS",CF.N(-1.45,0.45,0)*CF.A(M.R(0+4.55*M.S(Sine/24)),M.R(0),M.R(-25+0.45*M.S(Sine/24))),Alpha,"Lerp")

			Animate("RJ",CF.N(0,-.05+.1*M.C(Sine/24),0)*CF.A(M.R(2+2*M.S(Sine/24)),M.R(0),M.R(0)),Alpha,"Lerp")
			Animate("NK",CF.N(0,1.5,0)*CF.A(M.R(-45+5*M.S(Sine/24)),M.R(0+0.55*M.S(Sine/24)),M.R(4+0.15*M.S(Sine/24))),Alpha,"Lerp")

			Animate("RS",CF.N(1.45,0.45,0)*CF.A(M.R(0+4.55*M.S(Sine/24)),M.R(5-0.45*M.S(Sine/24)),M.R(25+0.45*M.S(Sine/24))),Alpha,"Lerp")
			
		elseif(State == 'Idle') and Mode == 5 then
			local Alpha = .2

			Animate("LS",CF.N(-1.45,0.45,0)*CF.A(M.R(0+4.55*M.S(Sine/24)),M.R(90),M.R(90+Loudness/2.05)),Alpha,"Lerp")

			Animate("RJ",CF.N(0,-.05+.1*M.C(Sine/24),0)*CF.A(M.R(2+2*M.S(Sine/24)),M.R(0),M.R(0)),Alpha,"Lerp")
			Animate("NK",CF.N(0,1.5,0)*CF.A(M.R(-45+Loudness/2.05),M.R(0+0.55*M.S(Sine/24)),M.R(4+0.15*M.S(Sine/24))),Alpha,"Lerp")

			Animate("RS",CF.N(1.45,0.45,0)*CF.A(M.R(0+4.55*M.S(Sine/24)),M.R(-90-0.45*M.S(Sine/24)),M.R(-90+-Loudness/2.05)),Alpha,"Lerp")

		elseif(State == 'Walk')then
			local Alpha = .3*(Hum.WalkSpeed/16)
			Animate('RJ',CF.N(0,-.2+.1*M.C(Sine/(WsFactor/2)),-.1*Vec.Z)*CF.A(M.R(-10-3*M.S(Sine/(WsFactor/2)))*Vec.Z,M.R(0+5*M.S(Sine/WsFactor)),M.R(-25)*Vec.X),Alpha,'Lerp')

			Animate('NK',Joints.NK.D.C0*CF.A(M.R(0+0*M.S(Sine/(WsFactor/2)))*Vec.Z,M.R(0+0*M.C(Sine/WsFactor))*Vec.Z,0),Alpha,'Lerp')

			Animate('RS',CF.N(.5-.8*M.S(Sine/WsFactor)*Vec.X,-1-.3*M.C(Sine/WsFactor),-.1+.8*M.S(Sine/WsFactor)*Vec.Z)*CF.A((M.R(0-55*M.S(Sine/WsFactor))+M.R(0+15*M.C(Sine/WsFactor)))*Vec.Z,M.R(-2),M.R(2))*CF.A(0,0,(M.R(0-45*M.S(Sine/WsFactor))+M.R(0+15*M.C(Sine/WsFactor)))*Vec.X),Alpha,'Lerp')	

			Animate('LS',CF.N(-.5+.8*M.S(Sine/WsFactor)*Vec.X,-1+.3*M.C(Sine/WsFactor),-.1-.8*M.S(Sine/WsFactor)*Vec.Z)*CF.A((M.R(0+55*M.S(Sine/WsFactor))+M.R(0-15*M.C(Sine/WsFactor)))*Vec.Z,M.R(2),M.R(-2))*CF.A(0,0,(M.R(0+45*M.S(Sine/WsFactor))+M.R(0-15*M.C(Sine/WsFactor)))*Vec.X),Alpha,'Lerp')


		elseif(State == 'Jump')then
			local idk = math.min(math.max(Root.Velocity.Y/75,-M.R(45)),M.R(45))

			Animate('LS',Joints.LS.D.C0*CF.A(M.R(-5),0,M.R(-15)),.2,'Lerp')
			Animate('RS',Joints.RS.D.C0*CF.A(M.R(-5),0,M.R(15)),.2,'Lerp')

			Animate('RJ',Joints.RJ.D.C0*CF.A(math.min(math.max(Root.Velocity.Y/100,-M.R(90)),M.R(45)),0,0),.2,'Lerp')
			Animate('NK',Joints.NK.D.C0*CF.A(math.min(math.max(Root.Velocity.Y/100,-M.R(90)),M.R(45)),0,0),.2,'Lerp')


		elseif(State == 'Fall')then
			local idk = math.min(math.max(Root.Velocity.Y/75,-M.R(45)),M.R(45))
			Animate('LS',Joints.LS.D.C0*CF.A(M.R(-5),0,M.R(-45)+idk),.2,'Lerp')
			Animate('RS',Joints.RS.D.C0*CF.A(M.R(-5),0,M.R(45)-idk),.2,'Lerp')

			Animate('RJ',Joints.RJ.D.C0*CF.A(math.min(math.max(Root.Velocity.Y/100,-M.R(45)),M.R(45)),0,0),.2,'Lerp')
			Animate('NK',Joints.NK.D.C0*CF.A(math.min(math.max(Root.Velocity.Y/100,-M.R(45)),M.R(45)),0,0),.2,'Lerp')


		end
	end	

	fwait()
end